{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","active","to","name","Message","message","maxLength10","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","isAuth","dialogsItems","values","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,4B,0FCahKC,EAVE,SAACC,GACd,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACA,qBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,OAA/C,SACA,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCQfC,EAVC,SAACT,GACb,OACA,8BACI,qBAAKG,UAAWC,IAAQC,OAAxB,SAAiCL,EAAMU,a,iCC8BzCC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAfL,SAACd,GACpB,OACI,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAK,iBAAiBa,YAAY,gBAAgBC,SAAU,CAACC,IAAUZ,OAGvG,8BACI,kDASDa,EA9CC,SAACxB,GACb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAiBN,GAAI4B,EAAE5B,IAAZ4B,EAAE5B,OAC3E6B,EAAmBN,EAAMO,SAASH,KAAK,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASvB,QAASuB,EAAEvB,SAAcuB,EAAE/B,OAC/DuB,EAAMS,eAQ3B,OAAoB,GAAhBlC,EAAMmC,OAAwB,cAAC,IAAD,CAAU5B,GAAI,WAG5C,sBAAKJ,UAAWC,IAAQwB,QAAxB,UACI,qBAAKzB,UAAWC,IAAQgC,aAAxB,SACKT,IAEL,sBAAKxB,UAAWC,IAAQ4B,SAAxB,UACA,cAACnB,EAAD,CAAqBG,SAZP,SAACqB,GACnBrC,EAAMsC,YAAYD,EAAOH,mBAYhBH,S,gCCVFQ,sBAAQC,aAfD,SAACf,GACnB,MAAM,CACFC,YAAaD,EAAMC,gBAIF,SAACe,GACtB,MAAM,CACFH,YAAY,SAACJ,GACTO,EAASC,YAAmBR,SAOxCS,IADeJ,CACGf","file":"static/js/3.e1de3c5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__ge5AU\",\"dialogsItems\":\"Dialogs_dialogsItems__2tJG6\",\"active\":\"Dialogs_active__1Depk\",\"dialog\":\"Dialogs_dialog__330bu\",\"messages\":\"Dialogs_messages__3Nexi\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from '../Dialogs.module.css';\r\n\r\nconst DialogItem=(props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n    <div className={classes.dialog + ' ' + classes.active}>\r\n    <NavLink to={path}>{props.name}</NavLink>\r\n </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem","\r\nimport React from 'react';\r\nimport classes from '../Dialogs.module.css';\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return(\r\n    <div>\r\n        <div className={classes.dialog}>{props.message}</div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Message","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from '../Dialogs/DialogItem/DialogItem';\r\nimport Message from '../Dialogs/Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\n\r\n\r\nconst Dialogs = (props) =>{\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map (d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map (m => <Message message={m.message} key={m.id}/>);\r\n    let newMessageBody = state.newMessageBody\r\n\r\n\r\n\r\n    const addNewMessage = (values) =>{\r\n        props.sendMessage(values.newMessageBody);  \r\n    }\r\n      \r\n    if (props.isAuth == false) return <Redirect to={'/login'}/>; \r\n\r\n    return(\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n                {messagesElements}\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newMessageBody' placeholder='Enter message' validate={[required, maxLength10]} />\r\n                \r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n    \r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm' })(AddMessageForm)\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Dialogs from './Dialogs'\r\nimport {sendMessageCreator} from '../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport {withAuthRedirect} from '../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        sendMessage:(newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),\r\nwithAuthRedirect)(Dialogs)"],"sourceRoot":""}