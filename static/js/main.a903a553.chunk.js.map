{"version":3,"sources":["redux/dialogs-reducer.js","components/Profile/MyPosts/Post/Post.module.css","components/common/Paginator/Paginator.module.css","components/Navbar/Navbar.module.css","api/api.js","redux/profile-reducer.js","redux/sidebar-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","assets/images/Iphone-spinner-2.gif","components/common/Preloader/Preloader.js","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","assets/images/users.png","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","components/hoc/withSuspense.js","reportWebVitals.js","index.js","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/hoc/withAuthRedirect.js","components/Users/Users.module.css","components/Header/Header.module.css"],"names":["SEND_MESSAGE","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","newMessageBody","sendMessageCreator","module","exports","instance","axios","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","newPostText","profile","profileReducer","newPosts","filter","p","postId","setUserProfile","setStatus","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setUsers","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","SET_USER_DATA","login","isAuth","authReducer","setAuthUserData","getAuthUserData","INITIALIZED_SUCCESS","initializeApp","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","Header","props","className","classes","header","src","alt","loginBlock","onClick","logout","to","Navbar","nav","item","activeClassName","activeLink","Post","like","MyPosts","React","memo","postsElements","postsBlock","AddProfileFormRedux","onSubmit","values","addPosts","maxLength10","maxLengthCreator","reduxForm","handleSubmit","Field","component","Textarea","placeholder","validate","required","Preloader","preloader","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","ProfileInfo","descriptionBlock","photos","large","SuperMyPostsContainer","connect","addPostActionCreator","Profile","MyPostsContainer","ProfileContainer","this","match","params","authorizedUserId","history","push","compose","withRouter","withAuthRedirect","Paginator","pagesCount","Math","ceil","pages","i","styles","selectedPage","onPageChanged","User","user","small","userPhoto","disabled","some","Users","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","bind","totalCount","HeaderContainer","LoginReduxForm","createField","Input","error","formSummaryError","length","stopSubmit","_error","formData","DialogsContainer","lazy","App","path","render","Suspense","fallback","initialized","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","maxLength","FormControl","input","meta","children","hasError","touched","formControl","restProps","mapStateToPropsForRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.a903a553.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\n\r\nlet initialState = {\r\n  dialogs:[\r\n    {id: 1, name:'Dimych'},\r\n    {id: 2, name:'Andrey'},\r\n    {id: 3, name:'Anton'},\r\n  ],\r\n    messages:[\r\n    {id:1, message: 'Hi'},\r\n    {id:2, message: 'How are you'},\r\n    {id:3, message: 'Yo'},\r\n  ]\r\n}\r\nconst dialogsReducer = (state = initialState, action)=>{\r\n\r\n   switch (action.type){\r\n     case SEND_MESSAGE:\r\n      \r\n        return {\r\n          ...state,\r\n          messages: [...state.messages, {id:10, message: action.newMessageBody}]\r\n          \r\n        };\r\n      \r\n        \r\n        default:\r\n          return state;\r\n      }\r\n}\r\nexport default dialogsReducer;\r\n\r\nexport const sendMessageCreator = (newMessageBody) =>{\r\n  return {\r\n    type: SEND_MESSAGE, newMessageBody\r\n  }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2FjK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__CB7Ca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3XPTM\",\"item\":\"Navbar_item__YFJ0C\",\"activeLink\":\"Navbar_activeLink__ceJsP\"};","import * as axios from 'axios';\r\nimport { setUserProfile } from '../redux/profile-reducer';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:{\r\n        \"API-KEY\": \"ea74df5c-fa58-430e-9233-df1f4bffb47c\"\r\n    }\r\n});\r\n\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage=1, pageSize=10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response =>{\r\n                    return response.data;\r\n                });\r\n    },\r\n    follow (userId){\r\n        return instance.post(`follow/${userId}`)  \r\n            \r\n    },\r\n    unfollow (userId){\r\n        return instance.delete(`follow/${userId}`)  \r\n    },\r\n    getProfile(userId){\r\n        console.warn('Obsolete method. Please profileAPI object')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId){\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status/`, {status:status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me(){\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false){\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {userAPI} from '../api/api';\r\nimport {profileAPI} from '../api/api';\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n  posts:[\r\n    {id:1, message: 'Hi, how are you', likesCount: 12},\r\n    {id:2, message: 'It is my first post', likesCount: 10},\r\n  ],\r\n  newPostText: 'it-kamasutra',\r\n  profile: null,\r\n  status: ''\r\n};\r\n\r\nconst profileReducer = (state=initialState, action)=>{\r\n    switch (action.type){\r\n      case ADD_POST: \r\n        let newPosts = {\r\n          id:5, message: action.newPostText, likesCount:0\r\n        }\r\n        return {\r\n          ...state,\r\n          posts: [...state.posts, newPosts],\r\n        \r\n        };\r\n      \r\n      case SET_USER_PROFILE:\r\n        return{\r\n          ...state, \r\n          profile: action.profile\r\n        };\r\n\r\n      case DELETE_POST:\r\n        return{\r\n          ...state,\r\n          posts: state.posts.filter(p=> p.id != action.postId)\r\n        }\r\n\r\n      case SET_STATUS:\r\n        return{\r\n          ...state, \r\n          status: action.status\r\n        };\r\n      \r\n      default:\r\n        return state;\r\n      }\r\n}\r\nexport default profileReducer;\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n  return {\r\n    type: ADD_POST, newPostText\r\n  }\r\n}\r\n\r\nexport const setUserProfile = (profile) => ({type:SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type:SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type:DELETE_POST, postId})\r\n\r\nexport const getProfile = (userId) => {\r\n  return async (dispatch) =>{\r\n    let response = await userAPI.getProfile(userId);\r\n      dispatch(setUserProfile(response.data));\r\n    \r\n  }\r\n}\r\n\r\nexport const getStatus = (userId) => {\r\n  return async (dispatch) =>{\r\n    let response = await profileAPI.getStatus(userId);\r\n      dispatch(setStatus(response.data));\r\n  }\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n  return async (dispatch) =>{\r\n    let response = await profileAPI.updateStatus(status);\r\n      if (response.data.resultCode ===0 )\r\n      dispatch(setStatus(status));\r\n\r\n  }\r\n}\r\n \r\n ","let initialState = {\r\n\r\n};\r\n\r\nconst sidebarReducer = (state=initialState, action)=>{\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","\r\n\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    items.map ( u=> {\r\n    if (u.objPropName === itemId) {\r\n      return {...u, newObjProps}\r\n    }\r\n    return u;\r\n  })\r\n}","import {userAPI} from '../api/api';\r\nimport { updateObjectInArray } from '../utils/object-helpers';\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT= 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n  users:[ ],\r\n  pageSize: 5,\r\n  totalUsersCount: 0,\r\n  currentPage: 2,\r\n  isFetching: false,\r\n  followingInProgress: []\r\n  \r\n};\r\n\r\nconst usersReducer = (state=initialState, action)=>{\r\n    switch (action.type){\r\n      case FOLLOW:\r\n        return { \r\n          ...state, \r\n          users: updateObjectInArray(state.users,action.userId, 'id', {followed: true})\r\n          /* users: state.users.map ( u=> {\r\n            if (u.id === action.userId) {\r\n              return {...u, followed: true}\r\n            }\r\n            return u;\r\n          }) */\r\n      }\r\n      case UNFOLLOW:\r\n        return { \r\n          ...state, \r\n          users: updateObjectInArray(state.users,action.userId, 'id', {followed: false})\r\n         /*  users: state.users.map ( u=> {\r\n            if (u.id === action.userId) {\r\n              return {...u, followed: false}\r\n            }\r\n            return u;\r\n          }) */\r\n      }\r\n      case SET_USERS:\r\n        return {\r\n          ...state, users: action.users\r\n        }\r\n      \r\n      case SET_CURRENT_PAGE:\r\n        return {\r\n          ...state, currentPage: action.currentPage\r\n        }\r\n      case SET_TOTAL_USERS_COUNT:\r\n        return{\r\n          ...state, totalUsersCount: action.totalUsersCount\r\n        }\r\n      case TOGGLE_IS_FETCHING:\r\n        return{\r\n          ...state, isFetching: action.isFetching\r\n        }\r\n      case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n        return{\r\n          ...state, \r\n          followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id !==action.userId)\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => {\r\n  return{\r\n    type: FOLLOW, userId\r\n  }\r\n}\r\nexport const unfollowSuccess = (userId) => {\r\n  return{\r\n    type: UNFOLLOW, userId\r\n  }\r\n}\r\nexport const setUsers = (users) => {\r\n  return{\r\n    type: SET_USERS, users\r\n  }\r\n}\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n  return async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  dispatch(setCurrentPage(currentPage));\r\n        \r\n        let data = await userAPI.getUsers(currentPage,pageSize);\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setUsersTotalCount(data.totalCount));\r\n      \r\n  }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n  let response = await apiMethod(userId);\r\n      if(response.data.resultCode == 0){\r\n        dispatch(actionCreator(userId));\r\n      }\r\n      dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n  return async (dispatch) =>{\r\n\r\n    let apiMethod = userAPI.follow.bind(userAPI);\r\n    let actionCreator = followSuccess;\r\n    followUnfollowFlow (dispatch, userId, apiMethod, actionCreator);\r\n  \r\n  }\r\n}\r\n\r\nexport const unfollow = (userId) =>{\r\n  return async (dispatch) =>{\r\n\r\n    let apiMethod = userAPI.unfollow.bind(userAPI);\r\n    let actionCreator = unfollowSuccess;\r\n    followUnfollowFlow (dispatch, userId, apiMethod, actionCreator);\r\n\r\n}}\r\n \r\n\r\nexport default usersReducer;\r\n\r\n","import { stopSubmit } from 'redux-form';\r\nimport {authAPI} from '../api/api';\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n};\r\n\r\nconst authReducer = (state=initialState, action)=>{\r\n    switch (action.type){\r\n      case SET_USER_DATA:\r\n        return {\r\n          ...state,\r\n          ...action.data\r\n          \r\n        }\r\n      default:\r\n        return state;\r\n      }\r\n}\r\nexport default authReducer;\r\n\r\nexport const setAuthUserData = (email,userId, login, isAuth) => ({type:SET_USER_DATA, data:{email,userId, login, isAuth} })\r\n\r\nexport const getAuthUserData = () => {\r\n  return async(dispatch) =>{\r\n     let response = await authAPI.me();\r\n        if (response.data.resultCode ===0){\r\n          let { email,id, login} = response.data.data\r\n          dispatch(setAuthUserData( email,id, login, true));\r\n            }\r\n        \r\n  }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n  return async (dispatch) =>{\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n        \r\n            if (response.data.resultCode ===0){\r\n              dispatch(getAuthUserData())\r\n            } else {\r\n              let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n              dispatch(stopSubmit('login', {_error: message}));\r\n            }\r\n        \r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  return async (dispatch) =>{\r\n    let response = await authAPI.logout();\r\n            if (response.data.resultCode ===0){\r\n              dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n        \r\n  }\r\n}","import { stopSubmit } from 'redux-form';\r\nimport {authAPI} from '../api/api';\r\nimport { getAuthUserData } from './auth-reducer';\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n \r\n};\r\n\r\nconst appReducer = (state=initialState, action)=>{\r\n    switch (action.type){\r\n      case INITIALIZED_SUCCESS:\r\n        return {\r\n          ...state,\r\n          initialized:true\r\n          \r\n        }\r\n      default:\r\n        return state;\r\n      }\r\n}\r\nexport default appReducer;\r\n\r\nexport const initializedSuccess = () => ({type:INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => {\r\n  return (dispatch)=>{\r\n\r\n  let promise = dispatch(getAuthUserData());\r\n  promise.then(()=>{\r\n    dispatch(initializedSuccess());\r\n  }); \r\n}\r\n} \r\n\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport {initializeApp} from './../redux/app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage:profileReducer,\r\n    dialogsPage:dialogsReducer,\r\n    sidebar:sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: initializeApp\r\n});\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import  {NavLink } from 'react-router-dom';\r\nimport classes from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return <header className= {classes.header}>\r\n    <img src=\"https://w7.pngwing.com/pngs/212/174/png-transparent-vk-computer-icons-social-networking-service-social-media-social-media-trademark-logo-social-media.png\" alt=\"\"/>\r\n    <div className={classes.loginBlock}>\r\n      { props.isAuth \r\n      ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div> \r\n      :<NavLink to={'/login'}>Login</NavLink>}\r\n      \r\n    </div>\r\n  </header>\r\n}\r\n\r\nexport default Header;","\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n    return  <nav className={classes.nav}>\r\n    <div className={classes.item}>\r\n      <NavLink to=\"/profile\" activeClassName={classes.activeLink}>Profile</NavLink>\r\n    </div>\r\n    <div className={classes.item}>\r\n      <NavLink to=\"/dialogs\" activeClassName={classes.activeLink}>Message</NavLink>\r\n    </div>\r\n    <div className={classes.item}>\r\n      <NavLink to=\"/users\" activeClassName={classes.activeLink}>Users</NavLink>\r\n    </div>\r\n    <div className={classes.item}>\r\n      <NavLink to=\"\">News</NavLink>\r\n    </div>\r\n    <div className={classes.item}>\r\n      <NavLink to=\"\">Music</NavLink>\r\n    </div>\r\n    <div className={classes.item}>\r\n      <NavLink to=\"\">Settings</NavLink>\r\n    </div>\r\n  </nav>\r\n}\r\n\r\nexport default Navbar;","\r\nimport classes from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    return  <div>\r\n        <div className={classes.item}>\r\n          <img src=\"https://img1.goodfon.ru/original/600x1024/e/5e/neytiri-avatar-avatar.jpg\" />\r\n          {props.message}\r\n        </div>\r\n        <div>\r\n            <span>like </span>{props.like}\r\n          </div>\r\n  </div>\r\n}\r\n\r\nexport default Post;","import React, { PureComponent } from 'react';\r\nimport Post from './Post/Post';\r\nimport classes from './MyPosts.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  \r\n/* shouldComponentUpdate (nextProps, nextState) {\r\n  return nextProps != this.props || nextState != this.state\r\n} */\r\n\r\n  const addNewPost = (values) =>{\r\n    props.addPosts(values.newPostText);  \r\n}\r\n\r\n  let postsElements = props.posts.map(p => <Post key={p.id} message={p.message}  like = {p.likesCount}/>)\r\n  let newPostElement = React.createRef();\r\n\r\n    return  <div>\r\n    <div className ={classes.postsBlock}>\r\n      <h3>My posts</h3>\r\n        <AddProfileFormRedux onSubmit={addNewPost} />\r\n      <div className={classes.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  </div>\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n      <form onSubmit={props.handleSubmit}>\r\n          <div>\r\n              <Field component= {Textarea} name='newPostText' placeholder='Enter post' validate={[required, maxLength10]} />\r\n              \r\n          </div>\r\n          <div>\r\n              <button>Add post</button>\r\n          </div>\r\n      </form>\r\n  )\r\n  \r\n}\r\n\r\nconst AddProfileFormRedux = reduxForm({form: 'profileAddPostForm' })(AddNewPostForm)\r\n\r\nexport default MyPosts;","export default __webpack_public_path__ + \"static/media/Iphone-spinner-2.d3fbaf2b.gif\";","import React from 'react';\r\nimport preloader from '../../../assets/images/Iphone-spinner-2.gif';\r\n\r\nlet Preloader = (props) =>{\r\n    return <div>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeEditMode =() =>{\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactiveEditMode=()=>{\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n    this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) =>{\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        \r\n\r\n        if (prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status:this.props.status\r\n            });\r\n        }\r\n        let a = this.state;\r\n        let b = this.props;\r\n        console.log('componentDidUpdate')\r\n    }\r\n\r\n    render(){\r\n        console.log('render')\r\n    return(\r\n        <div>\r\n            {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activeEditMode}> {this.props.status || '----'}</span>\r\n                </div>\r\n            }\r\n            {\r\n                this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactiveEditMode} value={this.state.status}/>\r\n                    </div>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default ProfileStatus;","import React, { useEffect, useState } from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( ()=> {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n    \r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) =>{\r\n        setStatus (e.currentTarget.value);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ activateEditMode }> {props.status || '----'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode} value={status}/>\r\n                    </div>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatusWithHooks;","\r\n\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus.jsx'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  if (!props.profile){\r\n    return <Preloader/>\r\n  }\r\n    return  <div>\r\n    <div>\r\n      <img src=\"https://c.wallhere.com/photos/67/56/1920x1080_px_landscape_nature_river-792177.jpg!d\" />\r\n    </div>\r\n    <div className={classes.descriptionBlock}>\r\n      <img src={props.profile.photos.large}/>\r\n      <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n      ava + description\r\n    </div>\r\n   \r\n  </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport classes from './MyPosts.module.css';\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n  return{\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    addPosts: (newPostText) =>{\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst SuperMyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default SuperMyPostsContainer;\r\n\r\n\r\n\r\n","\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport Post from './MyPosts/Post/Post'\r\nimport classes from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n \r\n\r\n\r\nconst Profile = (props) => {\r\n  \r\n    return  <div>\r\n    <ProfileInfo profile ={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n   <MyPostsContainer/>\r\n  </div>\r\n}\r\n\r\n\r\nexport default Profile;\r\n","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport * as axios from 'axios';\r\nimport {setUserProfile, getProfile, updateStatus, getStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {userAPI} from '../../api/api.js';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {withAuthRedirect} from '../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount(){ \r\n     let userId = this.props.match.params.userId;\r\n      if (!userId) {\r\n        userId = this.props.authorizedUserId;\r\n        if (!userId){\r\n          this.props.history.push('/login');\r\n        }\r\n      }\r\n      this.props.getProfile(userId);\r\n      this.props.getStatus(userId);\r\n\r\n}\r\n  render(){\r\n    \r\n    return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n    \r\n}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {setUserProfile, getProfile, getStatus, updateStatus}),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n","export default __webpack_public_path__ + \"static/media/users.527d0908.png\";","import React from 'react';\r\nimport styles from './Paginator.module.css';\r\n\r\n\r\n\r\nlet Paginator = (props) => {\r\n        let pagesCount = Math.ceil (props.totalUsersCount / props.pageSize);\r\n\r\n        let pages = [];\r\n        for (let i=1; i <= pagesCount; i++){\r\n            pages.push(i);\r\n        }\r\n        \r\n        return <div>\r\n    \r\n                {pages.map( p =>{\r\n                    return <span className={props.currentPage === p && styles.selectedPage}\r\n                    onClick={()=> {props.onPageChanged(p);}}>{p}</span>\r\n                })}\r\n                \r\n            </div>\r\n         \r\n}\r\nexport default Paginator;","import React from 'react';\r\nimport userPhoto from '../../assets/images/users.png';\r\nimport styles from './Users.module.css';\r\nimport  {NavLink } from 'react-router-dom';\r\nimport * as axios from 'axios';\r\nimport { userAPI } from '../../api/api';\r\nimport Paginator from '../common/Paginator/Paginator';\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n       let u = user\r\n        \r\n         return (\r\n        <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <img src={u.photos.small !=null ? u.photos.small:userPhoto} className={styles.userPhoto}/>\r\n                        </NavLink> \r\n                    </div>\r\n                    <div>\r\n                        {u.followed \r\n                        ? <button disabled={followingInProgress.some(id => id === u.id)} onClick={ () => {\r\n                        \r\n                    \r\n                            unfollow(u.id)\r\n\r\n                        }}>Unfollow</button> \r\n                        :<button disabled={followingInProgress.some(id => id === u.id)} onClick={ () => {\r\n                        \r\n                         \r\n                            follow(u.id)\r\n\r\n                        }}>Follow</button> \r\n                        }\r\n                        \r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'u.location.country'}</div>\r\n                        <div>{'u.location.city'}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n            \r\n            \r\n        \r\n}\r\nexport default User;","import React from 'react';\r\nimport userPhoto from '../../assets/images/users.png';\r\nimport styles from './Users.module.css';\r\nimport  {NavLink } from 'react-router-dom';\r\nimport * as axios from 'axios';\r\nimport { userAPI } from '../../api/api';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\n\r\nlet Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, ...props}) => {\r\n        \r\n        \r\n         return <div>\r\n            <Paginator currentPage={currentPage=currentPage} onPageChanged={onPageChanged} totalUsersCount={totalUsersCount} pageSize={pageSize} />\r\n        <div>\r\n        {\r\n            props.users.map (u => <User user={u} followingInProgress={props.followingInProgress} unfollow={props.unfollow} follow={props.follow} key={u.id} />\r\n            )\r\n                \r\n        }\r\n   \r\n    </div>\r\n    </div>\r\n}\r\nexport default Users;","import {createSelector} from 'reselect';\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users)=>{\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {follow,unfollow, setCurrentPage, toggleFollowingProgress, requestUsers } from '../../redux/users-reducer'\r\nimport * as axios from 'axios';\r\nimport Users from './Users';\r\nimport Preloader from '../../components/common/Preloader/Preloader';\r\nimport {userAPI} from '../../api/api.js';\r\nimport {withAuthRedirect} from '../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport {getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress} from '../../redux/users-selectors'\r\n\r\n\r\nclass UsersContainer extends React.Component{\r\n\r\n    /* constructor(props){\r\n        super(props);\r\n    } */ \r\n\r\n    componentDidMount(){\r\n        const {currentPage, pageSize} = this.props; //во избежание каких-либо ошибок, пропсы лучше упаковывать т.о.\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) =>{\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render(){\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> :null}\r\n            <Users totalUsersCount={this.props.totalUsersCount} \r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                followingInProgress = {this.props.followingInProgress}\r\n                \r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n/* let mapStateToProps = (state) =>{\r\n    return{\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }  \r\n} */\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        /* users: getUserSuperSelector(state), */\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }  \r\n}\r\n/* let mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage: (pageNumber) =>{\r\n            dispatch(setCurrentPageAC(pageNumber));\r\n        },\r\n        setTotalUsersCount: (totalCount) =>{\r\n            dispatch(setUsersTotalCountAC(totalCount));\r\n        },\r\n        toggleIsFetching: (isFetching) =>{\r\n            dispatch(toggleIsFetchingAC(isFetching));\r\n        }\r\n\r\n    }\r\n} */\r\n\r\nexport default compose(\r\n    /* withAuthRedirect, */\r\n    connect (mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        requestUsers})\r\n)(UsersContainer);","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {setAuthUserData, getAuthUserData, logout} from '../../redux/auth-reducer';\r\n\r\n\r\nclass HeaderContainer extends React.Component{\r\n  \r\n    render (){\r\n      return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout}) (HeaderContainer);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\nimport { Input, createField } from '../common/FormsControls/FormsControls';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router';\r\nimport styles from '../common/FormsControls/FormsControls.module.css';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(5);\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {createField ('Email','email', Input, [required, maxLength10])}\r\n            {/* <div>\r\n                <Field placeholder={'Email'} name={'email'} component={Input} validate={[required, maxLength10]}/>\r\n            </div> */}\r\n            <div>\r\n                <Field placeholder={'Password'} name={'password'} type={'password'} component={Input} validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={'checkbox'} name={'rememberMe'} component={Input} validate={[required]}/> remember me\r\n            </div>\r\n            {props.error && <div className = {styles.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData)=> {\r\n        props.login(formData.email, formData.password, formData.rememberMe ); //важно понимать, что здесь это колбэк, который вызывает санккреатор-login, который в connect\r\n    }\r\n\r\n    if (props.isAuth){\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport ProfileContainer from './components/Profile/ProfileContainer';\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\n\n\n// const ProfileContainer = React.lazy (()=> import ('./components/Profile/ProfileContainer'));\n\nimport UsersContainer from './components/Users/UsersContainer';\nimport  {Route } from 'react-router-dom';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginPage from './components/Login/Login';\nimport Preloader from './components/common/Preloader/Preloader';\nimport {compose} from 'redux';\nimport {withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {initializeApp} from '../src/redux/app-reducer';\nimport { withSuspense } from './components/hoc/withSuspense';\nconst DialogsContainer = React.lazy (()=> import ('./components/Dialogs/DialogsContainer'));\n\n\n\nclass App extends Component {\n  componentDidMount(){\n    this.props.initializeApp()\n  }\n  render(){\n\n    /* if (!this.props.initialized){\n      return <Preloader/>\n    }\n     */\n     return (\n    <div className='app-wrapper'>\n      <HeaderContainer/>\n      <Navbar />\n      <div className='app-wrapper-content'>\n        <Route path='/dialogs' render= {withSuspense(DialogsContainer)}/>\n        <Route path='/profile/:userId?' render={ () => <ProfileContainer />}/>\n        <Route path='/users' render={ () => <UsersContainer />} />\n        <Route path='/login' render={ () => <LoginPage />} />\n      {/* <Profile /> */}\n      {/* <Dialogs /> */}\n      </div>\n    </div>\n    \n  )\n  }\n \n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nexport default compose( withRouter,connect(mapStateToProps, {initializeApp}) ) (App);\n","import React from 'react';\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n \r\n   return (props) =>{\r\n       return <React.Suspense fallback={<div>Loading...</div>}>\r\n       <Component {...props} />\r\n     </React.Suspense>\r\n   };\r\n}\r\n\r\n\r\n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport store from './redux/redux-store'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\n\n//addPost('SamuraJS.COM');\nlet rerenderEntireTree = (state) =>{\n  \n  ReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n}\n\nrerenderEntireTree();\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return undefined;\r\n    return `Max length is ${maxLength} symbols`;\r\n}","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst FormControl = ({input, meta, children,...props}) =>{\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return(\r\n        <div className={styles.formControl +' '+ (hasError ? styles.error: '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) =>{\r\n\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input}{...restProps} /></FormControl>\r\n}\r\nexport const Input = (props) =>{\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input}{...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, component, validate) => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} component={component} validate={validate}/>\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3be5A\",\"error\":\"FormsControls_error__2g8of\",\"formSummaryError\":\"FormsControls_formSummaryError__R-Pcl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__Z3f_2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2CJz7\",\"posts\":\"MyPosts_posts__1jiYf\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth \r\n  });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n \r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n    return ConnectAuthRedirectComponent;\r\n}\r\n\r\n\r\n  ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3KPDo\",\"selectedPage\":\"Users_selectedPage__17Rso\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2-Yqg\",\"loginBlock\":\"Header_loginBlock__21chT\"};"],"sourceRoot":""}